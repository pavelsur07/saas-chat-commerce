version: "3.9"

services:
    traefik:
        image: traefik:3.3
        command:
            - --providers.docker=true
            - --providers.docker.exposedByDefault=false
            - --entryPoints.http.address=:80
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
        networks:
            - traefik-public
    
    site:
        build:
            context: site/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./site:/app
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.site.rule=Host(`localhost`)
            - traefik.http.routers.site.entryPoints=http
            - traefik.http.services.site.loadBalancer.server.port=80
    
    site-php-fpm:
        build:
            context: site/docker
            dockerfile: development/php-fpm/Dockerfile
        container_name: site-php-fpm
        volumes:
            - ./site:/app
    
    site-php-cli:
        build:
            context: site/docker
            dockerfile: development/php-cli/Dockerfile
        container_name: site-php-cli
        working_dir: /app
        volumes:
            - ./site:/app
        command: php bin/console
    
    site-node-watch:
        image: node:18-alpine
        volumes:
            - ./site:/app
        working_dir: /app
        command: sh -c "yarn run watch"
        tty: true
    
    site-node-cli:
        image: node:18-alpine
        volumes:
            - ./site:/app
        working_dir: /app
    
    site-postgres:
        image: postgres:15-alpine
        container_name: site-postgres
        restart: always
        environment:
            POSTGRES_DB: app
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
        volumes:
            - postgres_data:/var/lib/postgresql/data
    
    redis-session:
        image: redis:alpine
        container_name: redis-session
        restart: always
    
    redis-realtime:
        image: redis:alpine
        container_name: redis-realtime
        restart: always

volumes:
    postgres_data:

networks:
    traefik-public:
        name: traefik-public
        driver: bridge